# 3. Реализовать базовый класс Worker (работник), в котором определить атрибуты: name, surname,
# position (должность), income (доход). Последний атрибут должен быть защищенным и ссылаться на
# словарь, содержащий элементы: оклад и премия, например, {"wage": wage, "bonus": bonus}. Создать
# класс Position (должность) на базе класса Worker. В классе Position реализовать методы получения
# полного имени сотрудника (get_full_name) и дохода с учетом премии (get_total_income). Проверить
# работу примера на реальных данных (создать экземпляры класса Position, передать данные, проверить
# значения атрибутов, вызвать методы экземпляров).

class Worker:
    def __init__(self, name, surname, position, _income):
        self.name = name
        self.surname = surname
        self.position = position
        self._income = _income
        _income = {'wage': None, 'bonus': None}

class Position(Worker):
    def get_full_name(self):
        print(self.name, self.surname, self.position)

    def get_total_income(self):
        print(sum(self._income.values()))

position1 = Position('Антон', 'Павлов', 'Заместитель начальника отдела', {'wage': 150000, 'bonus': 30000})
position1.get_full_name()
position1.get_total_income()